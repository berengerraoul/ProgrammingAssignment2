makeVector <- function(x) {
  m <- NULL
  set <- function(y) {
    x <<- y
    m <<- NULL
  }
  get <- function() x
  setmean <- function(mean) m <<- mean
  getmean <- function() m
  list(set = set, get = get,
       setmean = setmean,
       getmean = getmean)
}
v <- makeVector(c(4,10,15))
v$get()
v$set(c(5,11,16))
v$get()
v$getmean()
v$setmean(6)
v$getmean()


cachemean <- function(x, ...) {
  m <- x$getmean()
  if(!is.null(m)) {
    message("getting cached data")
    return(m)
  }
  data <- x$get()
  m <- mean(data, ...)
  x$setmean(m)
  m
}
cachemean(v)

###################################

makeCacheMatrix <- function(x = matrix()) {
  inv <- NULL 
  
  set <- function(y) {
    x <<- y
    inv <<- NULL  
  }
  
  get <- function() x
  
  setInverse <- function(inverse) inv <<- inverse
  
  getInverse <- function() inv

  list(set = set, get = get,
       setInverse = setInverse,
       getInverse = getInverse)
}

cacheSolve <- function(x, ...) {
  inv <- x$getInverse()
  if (!is.null(inv)) {
    message("getting cached data") 
    return(inv)  
  }
  
  mat <- x$get()  
  inv <- solve(mat, ...)  
  x$setInverse(inv)  
  inv  
}

mat <- matrix(c(1, 2, 3, 4), nrow = 2, ncol = 2)

cacheMat <- makeCacheMatrix(mat)

cacheSolve(cacheMat)  

